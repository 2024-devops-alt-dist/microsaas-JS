# Use postgres/example user/password credentials
services:
  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}

    volumes:
          - surprise-backend-js:/var/lib/postgresql/data # Stockage des données
          - ./api/db-scripts:/docker-entrypoint-initdb.d/ # Chemin des scripts SQL pour l'initialisation de la base de données

  api:
        build: ./api # Chemin vers le Dockerfile de l'API
        ports:
          - ${API_PORT}:${API_PORT}
        command: npm run dev
        depends_on:
          - db
        environment: # Pour plus de sécurité et n'avoir à les écrire qu'une fois on utilisera .env
          DB_HOST: ${DB_HOST}
          DB_PORT: ${DB_PORT}
          DB_USER: ${DB_USER}
          DB_PASSWORD: ${DB_PASSWORD}
          DB_NAME: ${DB_NAME}
          PORT: 3000
        volumes:
          - surprise-backend-js:/src/app

  client:
    build: ./client
    ports:
      - "5173:5173"
    volumes:
      - surprise-frontend-js:/src/app
    command: npm run dev

volumes:
  surprise-backend-js:
  surprise-frontend-js: